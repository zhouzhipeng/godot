<?xml version="1.0" encoding="UTF-8" ?>
<class name="ParticlesMaterial" inherits="Material" version="4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Particle properties for [GPUParticles3D] and [GPUParticles2D] nodes.
	</brief_description>
	<description>
		ParticlesMaterial defines particle properties and behavior. It is used in the [code]process_material[/code] of [GPUParticles3D] and [GPUParticles2D] emitter nodes.
		Some of this material's properties are applied to each particle when emitted, while others can have a [CurveTexture] applied to vary values over the lifetime of the particle.
		Particle animation is available only in [GPUParticles2D]. To use it, attach a [CanvasItemMaterial], with [member CanvasItemMaterial.particles_animation] enabled, to the particles node.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_param_max" qualifiers="const">
			<return type="float" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<description>
				Returns the maximum value range for the given parameter.
			</description>
		</method>
		<method name="get_param_min" qualifiers="const">
			<return type="float" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<description>
				Returns the minimum value range for the given parameter.
			</description>
		</method>
		<method name="get_param_texture" qualifiers="const">
			<return type="Texture2D" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<description>
				Returns the [Texture2D] used by the specified parameter.
			</description>
		</method>
		<method name="get_particle_flag" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="particle_flag" type="int" enum="ParticlesMaterial.ParticleFlags" />
			<description>
				Returns [code]true[/code] if the specified particle flag is enabled. See [enum ParticleFlags] for options.
			</description>
		</method>
		<method name="set_param_max">
			<return type="void" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<argument index="1" name="value" type="float" />
			<description>
				Sets the maximum value range for the given parameter.
			</description>
		</method>
		<method name="set_param_min">
			<return type="void" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<argument index="1" name="value" type="float" />
			<description>
				Sets the minimum value range for the given parameter.
			</description>
		</method>
		<method name="set_param_texture">
			<return type="void" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<argument index="1" name="texture" type="Texture2D" />
			<description>
				Sets the [Texture2D] for the specified [enum Parameter].
			</description>
		</method>
		<method name="set_particle_flag">
			<return type="void" />
			<argument index="0" name="particle_flag" type="int" enum="ParticlesMaterial.ParticleFlags" />
			<argument index="1" name="enable" type="bool" />
			<description>
				If [code]true[/code], enables the specified particle flag. See [enum ParticleFlags] for options.
			</description>
		</method>
	</methods>
	<members>
		<member name="angle_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Each particle's rotation will be animated along this [CurveTexture].
		</member>
		<member name="angle_max" type="float" setter="set_param_max" getter="get_param_max" default="0.0">
			Maximum initial rotation applied to each particle, in degrees.
			Only applied when [member particle_flag_disable_z] or [member particle_flag_rotate_y] are [code]true[/code] or the [BaseMaterial3D] being used to draw the particle is using [constant BaseMaterial3D.BILLBOARD_PARTICLES].
		</member>
		<member name="angle_min" type="float" setter="set_param_min" getter="get_param_min" default="0.0">
			Minimum equivalent of [member angle_max].
		</member>
		<member name="angular_velocity_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Each particle's angular velocity (rotation speed) will vary along this [CurveTexture] over its lifetime.
		</member>
		<member name="angular_velocity_max" type="float" setter="set_param_max" getter="get_param_max" default="0.0">
			Maximum initial angular velocity (rotation speed) applied to each particle in [i]degrees[/i] per second.
			Only applied when [member particle_flag_disable_z] or [member particle_flag_rotate_y] are [code]true[/code] or the [BaseMaterial3D] being used to draw the particle is using [constant BaseMaterial3D.BILLBOARD_PARTICLES].
		</member>
		<member name="angular_velocity_min" type="float" setter="set_param_min" getter="get_param_min" default="0.0">
			Minimum equivalent of [member angular_velocity_max].
		</member>
		<member name="anim_offset_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Each particle's animation offset will vary along this [CurveTexture].
		</member>
		<member name="anim_offset_max" type="float" setter="set_param_max" getter="get_param_max" default="0.0">
			Maximum animation offset that corresponds to frame index in the texture. [code]0[/code] is the first frame, [code]1[/code] is the last one. See [member CanvasItemMaterial.particles_animation].
		</member>
		<member name="anim_offset_min" type="float" setter="set_param_min" getter="get_param_min" default="0.0">
			Minimum equivalent of [member anim_offset_max].
		</member>
		<member name="anim_speed_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Each particle's animation speed will vary along this [CurveTexture].
		</member>
		<member name="anim_speed_max" type="float" setter="set_param_max" getter="get_param_max" default="0.0">
			Maximum particle animation speed. Animation speed of [code]1[/code] means that the particles will make full [code]0[/code] to [code]1[/code] offset cycle during lifetime, [code]2[/code] means [code]2[/code] cycles etc.
			With animation speed greater than [code]1[/code], remember to enable [member CanvasItemMaterial.particles_anim_loop] property if you want the animation to repeat.
		</member>
		<member name="anim_speed_min" type="float" setter="set_param_min" getter="get_param_min" default="0.0">
			Minimum equivalent of [member anim_speed_max].
		</member>
		<member name="attractor_interaction_enabled" type="bool" setter="set_attractor_interaction_enabled" getter="is_attractor_interaction_enabled" default="true">
			True if the interaction with particle attractors is enabled.
		</member>
		<member name="collision_bounce" type="float" setter="set_collision_bounce" getter="get_collision_bounce" default="0.0">
			Collision bounciness.
		</member>
		<member name="collision_enabled" type="bool" setter="set_collision_enabled" getter="is_collision_enabled" default="false">
			True if collisions are enabled for this particle system.
		</member>
		<member name="collision_friction" type="float" setter="set_collision_friction" getter="get_collision_friction" default="0.0">
			Collision friction.
		</member>
		<member name="collision_use_scale" type="bool" setter="set_collision_use_scale" getter="is_collision_using_scale" default="false">
			Should collision take scale into account.
		</member>
		<member name="color" type="Color" setter="set_color" getter="get_color" default="Color(1, 1, 1, 1)">
			Each particle's initial color. If the [GPUParticles2D]'s [code]texture[/code] is defined, it will be multiplied by this color. To have particle display color in a [BaseMaterial3D] make sure to set [member BaseMaterial3D.vertex_color_use_as_albedo] to [code]true[/code].
		</member>
		<member name="color_initial_ramp" type="Texture2D" setter="set_color_initial_ramp" getter="get_color_initial_ramp">
			Each particle's initial color will vary along this [GradientTexture1D] (multiplied with [member color]).
		</member>
		<member name="color_ramp" type="Texture2D" setter="set_color_ramp" getter="get_color_ramp">
			Each particle's color will vary along this [GradientTexture1D] over its lifetime (multiplied with [member color]).
		</member>
		<member name="damping_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Damping will vary along this [CurveTexture].
		</member>
		<member name="damping_max" type="float" setter="set_param_max" getter="get_param_max" default="0.0">
			The maximum rate at which particles lose velocity. For example value of [code]100[/code] means that the particle will go from [code]100[/code] velocity to [code]0[/code] in [code]1[/code] second.
		</member>
		<member name="damping_min" type="float" setter="set_param_min" getter="get_param_min" default="0.0">
			Minimum equivalent of [member damping_max].
		</member>
		<member name="direction" type="Vector3" setter="set_direction" getter="get_direction" default="Vector3(1, 0, 0)">
			Unit vector specifying the particles' emission direction.
		</member>
		<member name="emission_box_extents" type="Vector3" setter="set_emission_box_extents" getter="get_emission_box_extents">
			The box's extents if [code]emission_shape[/code] is set to [constant EMISSION_SHAPE_BOX].
		</member>
		<member name="emission_color_texture" type="Texture2D" setter="set_emission_color_texture" getter="get_emission_color_texture">
			Particle color will be modulated by color determined by sampling this texture at the same point as the [member emission_point_texture].
		</member>
		<member name="emission_normal_texture" type="Texture2D" setter="set_emission_normal_texture" getter="get_emission_normal_texture">
			Particle velocity and rotation will be set by sampling this texture at the same point as the [member emission_point_texture]. Used only in [constant EMISSION_SHAPE_DIRECTED_POINTS]. Can be created automatically from mesh or node by selecting "Create Emission Points from Mesh/Node" under the "Particles" tool in the toolbar.
		</member>
		<member name="emission_point_count" type="int" setter="set_emission_point_count" getter="get_emission_point_count">
			The number of emission points if [code]emission_shape[/code] is set to [constant EMISSION_SHAPE_POINTS] or [constant EMISSION_SHAPE_DIRECTED_POINTS].
		</member>
		<member name="emission_point_texture" type="Texture2D" setter="set_emission_point_texture" getter="get_emission_point_texture">
			Particles will be emitted at positions determined by sampling this texture at a random position. Used with [constant EMISSION_SHAPE_POINTS] and [constant EMISSION_SHAPE_DIRECTED_POINTS]. Can be created automatically from mesh or node by selecting "Create Emission Points from Mesh/Node" under the "Particles" tool in the toolbar.
		</member>
		<member name="emission_ring_axis" type="Vector3" setter="set_emission_ring_axis" getter="get_emission_ring_axis">
			The axis of the ring when using the emitter [constant EMISSION_SHAPE_RING].
		</member>
		<member name="emission_ring_height" type="float" setter="set_emission_ring_height" getter="get_emission_ring_height">
			The height of the ring when using the emitter [constant EMISSION_SHAPE_RING].
		</member>
		<member name="emission_ring_inner_radius" type="float" setter="set_emission_ring_inner_radius" getter="get_emission_ring_inner_radius">
			The inner radius of the ring when using the emitter [constant EMISSION_SHAPE_RING].
		</member>
		<member name="emission_ring_radius" type="float" setter="set_emission_ring_radius" getter="get_emission_ring_radius">
			The radius of the ring when using the emitter [constant EMISSION_SHAPE_RING].
		</member>
		<member name="emission_shape" type="int" setter="set_emission_shape" getter="get_emission_shape" enum="ParticlesMaterial.EmissionShape" default="0">
			Particles will be emitted inside this region. Use [enum EmissionShape] constants for values.
		</member>
		<member name="emission_sphere_radius" type="float" setter="set_emission_sphere_radius" getter="get_emission_sphere_radius">
			The sphere's radius if [code]emission_shape[/code] is set to [constant EMISSION_SHAPE_SPHERE].
		</member>
		<member name="flatness" type="float" setter="set_flatness" getter="get_flatness" default="0.0">
			Amount of [member spread] along the Y axis.
		</member>
		<member name="gravity" type="Vector3" setter="set_gravity" getter="get_gravity" default="Vector3(0, -9.8, 0)">
			Gravity applied to every particle.
		</member>
		<member name="hue_variation_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Each particle's hue will vary along this [CurveTexture].
		</member>
		<member name="hue_variation_max" type="float" setter="set_param_max" getter="get_param_max" default="0.0">
			Maximum initial hue variation applied to each particle. It will shift the particle color's hue.
		</member>
		<member name="hue_variation_min" type="float" setter="set_param_min" getter="get_param_min" default="0.0">
			Minimum equivalent of [member hue_variation_max].
		</member>
		<member name="initial_velocity_max" type="float" setter="set_param_max" getter="get_param_max" default="0.0">
			Maximum initial velocity magnitude for each particle. Direction comes from [member direction] and [member spread].
		</member>
		<member name="initial_velocity_min" type="float" setter="set_param_min" getter="get_param_min" default="0.0">
			Minimum equivalent of [member initial_velocity_max].
		</member>
		<member name="lifetime_randomness" type="float" setter="set_lifetime_randomness" getter="get_lifetime_randomness" default="0.0">
			Particle lifetime randomness ratio. The lifetime will be multiplied by a value interpolated between [code]1.0[/code] and a random number less than one. For example a random ratio of [code]0.4[/code] would scale the original lifetime between [code]0.4-1.0[/code] of its original value.
		</member>
		<member name="linear_accel_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Each particle's linear acceleration will vary along this [CurveTexture].
		</member>
		<member name="linear_accel_max" type="float" setter="set_param_max" getter="get_param_max" default="0.0">
			Maximum linear acceleration applied to each particle in the direction of motion.
		</member>
		<member name="linear_accel_min" type="float" setter="set_param_min" getter="get_param_min" default="0.0">
			Minimum equivalent of [member linear_accel_min].
		</member>
		<member name="orbit_velocity_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Each particle's orbital velocity will vary along this [CurveTexture].
		</member>
		<member name="orbit_velocity_max" type="float" setter="set_param_max" getter="get_param_max">
			Maximum orbital velocity applied to each particle. Makes the particles circle around origin. Specified in number of full rotations around origin per second.
			Only available when [member particle_flag_disable_z] is [code]true[/code].
		</member>
		<member name="orbit_velocity_min" type="float" setter="set_param_min" getter="get_param_min">
			Minimum equivalent of [member orbit_velocity_max].
		</member>
		<member name="particle_flag_align_y" type="bool" setter="set_particle_flag" getter="get_particle_flag" default="false">
			Align Y axis of particle with the direction of its velocity.
		</member>
		<member name="particle_flag_disable_z" type="bool" setter="set_particle_flag" getter="get_particle_flag" default="false">
			If [code]true[/code], particles will not move on the z axis.
		</member>
		<member name="particle_flag_rotate_y" type="bool" setter="set_particle_flag" getter="get_particle_flag" default="false">
			If [code]true[/code], particles rotate around Y axis by [member angle_min].
		</member>
		<member name="radial_accel_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Each particle's radial acceleration will vary along this [CurveTexture].
		</member>
		<member name="radial_accel_max" type="float" setter="set_param_max" getter="get_param_max" default="0.0">
			Maximum radial acceleration applied to each particle. Makes particle accelerate away from the origin or towards it if negative.
		</member>
		<member name="radial_accel_min" type="float" setter="set_param_min" getter="get_param_min" default="0.0">
			Minimum equivalent of [member radial_accel_max].
		</member>
		<member name="scale_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Each particle's scale will vary along this [CurveTexture]. If a [CurveXYZTexture] is supplied instead, the scale will be separated per-axis.
		</member>
		<member name="scale_max" type="float" setter="set_param_max" getter="get_param_max" default="1.0">
			Maximum initial scale applied to each particle.
		</member>
		<member name="scale_min" type="float" setter="set_param_min" getter="get_param_min" default="1.0">
			Minimum equivalent of [member scale_max].
		</member>
		<member name="spread" type="float" setter="set_spread" getter="get_spread" default="45.0">
			Each particle's initial direction range from [code]+spread[/code] to [code]-spread[/code] degrees.
		</member>
		<member name="sub_emitter_amount_at_end" type="int" setter="set_sub_emitter_amount_at_end" getter="get_sub_emitter_amount_at_end">
		</member>
		<member name="sub_emitter_frequency" type="float" setter="set_sub_emitter_frequency" getter="get_sub_emitter_frequency">
		</member>
		<member name="sub_emitter_keep_velocity" type="bool" setter="set_sub_emitter_keep_velocity" getter="get_sub_emitter_keep_velocity" default="false">
		</member>
		<member name="sub_emitter_mode" type="int" setter="set_sub_emitter_mode" getter="get_sub_emitter_mode" enum="ParticlesMaterial.SubEmitterMode" default="0">
		</member>
		<member name="tangential_accel_curve" type="Texture2D" setter="set_param_texture" getter="get_param_texture">
			Each particle's tangential acceleration will vary along this [CurveTexture].
		</member>
		<member name="tangential_accel_max" type="float" setter="set_param_max" getter="get_param_max" default="0.0">
			Maximum tangential acceleration applied to each particle. Tangential acceleration is perpendicular to the particle's velocity giving the particles a swirling motion.
		</member>
		<member name="tangential_accel_min" type="float" setter="set_param_min" getter="get_param_min" default="0.0">
			Minimum equivalent of [member tangential_accel_max].
		</member>
	</members>
	<constants>
		<constant name="PARAM_INITIAL_LINEAR_VELOCITY" value="0" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set initial velocity properties.
		</constant>
		<constant name="PARAM_ANGULAR_VELOCITY" value="1" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set angular velocity properties.
		</constant>
		<constant name="PARAM_ORBIT_VELOCITY" value="2" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set orbital velocity properties.
		</constant>
		<constant name="PARAM_LINEAR_ACCEL" value="3" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set linear acceleration properties.
		</constant>
		<constant name="PARAM_RADIAL_ACCEL" value="4" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set radial acceleration properties.
		</constant>
		<constant name="PARAM_TANGENTIAL_ACCEL" value="5" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set tangential acceleration properties.
		</constant>
		<constant name="PARAM_DAMPING" value="6" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set damping properties.
		</constant>
		<constant name="PARAM_ANGLE" value="7" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set angle properties.
		</constant>
		<constant name="PARAM_SCALE" value="8" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set scale properties.
		</constant>
		<constant name="PARAM_HUE_VARIATION" value="9" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set hue variation properties.
		</constant>
		<constant name="PARAM_ANIM_SPEED" value="10" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set animation speed properties.
		</constant>
		<constant name="PARAM_ANIM_OFFSET" value="11" enum="Parameter">
			Use with [method set_param_min], [method set_param_max], and [method set_param_texture] to set animation offset properties.
		</constant>
		<constant name="PARAM_MAX" value="12" enum="Parameter">
			Represents the size of the [enum Parameter] enum.
		</constant>
		<constant name="PARTICLE_FLAG_ALIGN_Y_TO_VELOCITY" value="0" enum="ParticleFlags">
			Use with [method set_particle_flag] to set [member particle_flag_align_y].
		</constant>
		<constant name="PARTICLE_FLAG_ROTATE_Y" value="1" enum="ParticleFlags">
			Use with [method set_particle_flag] to set [member particle_flag_rotate_y].
		</constant>
		<constant name="PARTICLE_FLAG_DISABLE_Z" value="2" enum="ParticleFlags">
			Use with [method set_particle_flag] to set [member particle_flag_disable_z].
		</constant>
		<constant name="PARTICLE_FLAG_MAX" value="3" enum="ParticleFlags">
			Represents the size of the [enum ParticleFlags] enum.
		</constant>
		<constant name="EMISSION_SHAPE_POINT" value="0" enum="EmissionShape">
			All particles will be emitted from a single point.
		</constant>
		<constant name="EMISSION_SHAPE_SPHERE" value="1" enum="EmissionShape">
			Particles will be emitted in the volume of a sphere.
		</constant>
		<constant name="EMISSION_SHAPE_SPHERE_SURFACE" value="2" enum="EmissionShape">
			Particles will be emitted on the surface of a sphere.
		</constant>
		<constant name="EMISSION_SHAPE_BOX" value="3" enum="EmissionShape">
			Particles will be emitted in the volume of a box.
		</constant>
		<constant name="EMISSION_SHAPE_POINTS" value="4" enum="EmissionShape">
			Particles will be emitted at a position determined by sampling a random point on the [member emission_point_texture]. Particle color will be modulated by [member emission_color_texture].
		</constant>
		<constant name="EMISSION_SHAPE_DIRECTED_POINTS" value="5" enum="EmissionShape">
			Particles will be emitted at a position determined by sampling a random point on the [member emission_point_texture]. Particle velocity and rotation will be set based on [member emission_normal_texture]. Particle color will be modulated by [member emission_color_texture].
		</constant>
		<constant name="EMISSION_SHAPE_RING" value="6" enum="EmissionShape">
			Particles will be emitted in a ring or cylinder.
		</constant>
		<constant name="EMISSION_SHAPE_MAX" value="7" enum="EmissionShape">
			Represents the size of the [enum EmissionShape] enum.
		</constant>
		<constant name="SUB_EMITTER_DISABLED" value="0" enum="SubEmitterMode">
		</constant>
		<constant name="SUB_EMITTER_CONSTANT" value="1" enum="SubEmitterMode">
		</constant>
		<constant name="SUB_EMITTER_AT_END" value="2" enum="SubEmitterMode">
		</constant>
		<constant name="SUB_EMITTER_AT_COLLISION" value="3" enum="SubEmitterMode">
		</constant>
		<constant name="SUB_EMITTER_MAX" value="4" enum="SubEmitterMode">
		</constant>
	</constants>
</class>
